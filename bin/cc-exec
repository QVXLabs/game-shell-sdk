#!/bin/bash

shopt -s nocasematch

function input_directories() {
    local src_dirs=()
    for src_file in "$@"; do
	if [[ "$src_file" =~ .*\.(c|cpp|cxx|s|o)$ ]]; then
	    local src_dir=$(dirname "$src_file")
	    if [[ ! " ${src_dirs[@]} " =~ " ${src_dir} " ]]; then
		src_dirs+=("$src_dir")
	    fi
    fi
    done
    echo "${src_dirs[@]}"
}

function output_directory() {
    local output_dir="."
    while [[ "$#" -gt 0 ]]; do
        case "$1" in
            -o)
                shift
                if [[ "$1" == */* ]]; then
                    output_dir=$(dirname "$1")
                fi
                ;;
        esac
        shift
    done
    echo "$output_dir"
}

function mount_volume_flag_list() {
    local volume_mounts=()
    for dir in "$@"; do
	volume_mounts+=("-v $(realpath "$dir"):$(realpath "$dir")")
    done
    echo "${volume_mounts[@]}"
}


# get working directory
WORKING_DIR="$(pwd)"

# capture image and shift out argument
IMAGE=$1

# verify image has been created
if [[ "$(docker images -q $IMAGE_NAME 2> /dev/null)" == "" ]]; then
    echo "Docker image '$IMAGE_NAME' not found. Please run setup-docker.sh"
    exit 1
fi

# run command
DOCKER_VOL_FLAGS="$(mount_volume_flag_list $(input_directories "$@") $(output_directory "$@"))"

docker run --rm \
       --platform linux/arm/v7 \
       ${DOCKER_VOL_FLAGS[@]} \
       -w "$WORKING_DIR" \
       $IMAGE \
       "${@:2}"
